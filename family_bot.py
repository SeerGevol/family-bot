from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
import sqlite3
import random
import os
from datetime import datetime

# –£–∫–∞–∂–∏—Ç–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º
ALLOWED_USERS = [7666108269, 1278614067]

def is_allowed(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º."""
    return user_id in ALLOWED_USERS

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_db():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç."""
    conn = sqlite3.connect("family_bot.db")
    cursor = conn.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS gratitude (id INTEGER PRIMARY KEY, user TEXT, message TEXT, timestamp TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS dates (id INTEGER PRIMARY KEY, date TEXT, description TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS emotions (id INTEGER PRIMARY KEY, user TEXT, mood TEXT, timestamp TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS list_items (id INTEGER PRIMARY KEY, item TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS goals (id INTEGER PRIMARY KEY, goal TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS photos (id INTEGER PRIMARY KEY, user TEXT, file_id TEXT, timestamp TEXT)")
    conn.commit()
    conn.close()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not is_allowed(user_id):
        await update.message.reply_text("‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.")
        return

    user = update.effective_user
    keyboard = [
        [InlineKeyboardButton("‚ú® –î–æ–±–∞–≤–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å", callback_data="gratitude")],
        [InlineKeyboardButton("üì∏ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º", callback_data="view_album")],
        [InlineKeyboardButton("üéØ –ü–æ–ª—É—á–∏—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂", callback_data="challenge")],
        [InlineKeyboardButton("üìÖ –ü–∞–º—è—Ç–Ω—ã–µ –¥–∞—Ç—ã", callback_data="dates")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, *{user.first_name}*!\n"
        "–Ø _Family Bot_ ‚Äî –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å:\n\n"
        "üìå *–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "‚ú® /gratitude - –î–æ–±–∞–≤–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å\n"
        "üìñ /viewgratitudes - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏\n"
        "üõí /additem - –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫\n"
        "üõçÔ∏è /viewitems - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫\n"
        "‚ùå /removeitem - –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫\n"
        "üéØ /addgoal - –î–æ–±–∞–≤–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—É—é —Ü–µ–ª—å\n"
        "üèÜ /goals - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π\n"
        "üìÖ /setdate - –î–æ–±–∞–≤–∏—Ç—å –ø–∞–º—è—Ç–Ω—É—é –¥–∞—Ç—É\n"
        "üóìÔ∏è /dates - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–∞–º—è—Ç–Ω—ã–µ –¥–∞—Ç—ã\n"
        "üì∏ /addphoto - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ –≤ –∞–ª—å–±–æ–º\n"
        "üé• /viewalbum - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∞–ª—å–±–æ–º\n"
        "üïí /morning - –£—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "üåô /evening - –í–µ—á–µ—Ä–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "üòä /mood - –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º\n"
        "üß© /riddle - –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–∞–¥–∫—É\n"
        "üéâ /challenge - –ü–æ–ª—É—á–∏—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º!",
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."""
    await update.message.reply_text(
        "üìã *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:*\n"
        "‚ú® /gratitude - –î–æ–±–∞–≤–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å\n"
        "üìñ /viewgratitudes - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏\n"
        "üõí /additem - –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫\n"
        "üõçÔ∏è /viewitems - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫\n"
        "‚ùå /removeitem - –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫\n"
        "üéØ /addgoal - –î–æ–±–∞–≤–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—É—é —Ü–µ–ª—å\n"
        "üèÜ /goals - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π\n"
        "üìÖ /setdate - –î–æ–±–∞–≤–∏—Ç—å –ø–∞–º—è—Ç–Ω—É—é –¥–∞—Ç—É\n"
        "üóìÔ∏è /dates - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–∞–º—è—Ç–Ω—ã–µ –¥–∞—Ç—ã\n"
        "üì∏ /addphoto - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ –≤ –∞–ª—å–±–æ–º\n"
        "üé• /viewalbum - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∞–ª—å–±–æ–º\n"
        "üïí /morning - –£—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "üåô /evening - –í–µ—á–µ—Ä–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "üòä /mood - –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º\n"
        "üß© /riddle - –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–∞–¥–∫—É\n"
        "üéâ /challenge - –ü–æ–ª—É—á–∏—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º!",
        parse_mode="Markdown"
    )

# –ß–µ–ª–ª–µ–Ω–¥–∂–∏
async def challenge_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂."""
    challenges = [
        "üíå –ù–∞–ø–∏—à–∏—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, –∑–∞ —á—Ç–æ –≤—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.",
        "üì∏ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –ª—é–±–∏–º–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –∏–∑ –≤–∞—à–µ–≥–æ –æ–±—â–µ–≥–æ –ø—Ä–æ—à–ª–æ–≥–æ.",
        "üéÅ –°–¥–µ–ª–∞–π—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–π —Å—é—Ä–ø—Ä–∏–∑: –∑–∞–∫–∞–∂–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É –µ–¥—ã –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞.",
        "üç¥ –£—Å—Ç—Ä–æ–π—Ç–µ –æ–Ω–ª–∞–π–Ω-—É–∂–∏–Ω, –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–≤ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ä–µ—Ü–µ–ø—Ç.",
        "üéµ –°–æ–∑–¥–∞–π—Ç–µ –ø–ª–µ–π–ª–∏—Å—Ç –∏–∑ –ø–µ—Å–µ–Ω, –∫–æ—Ç–æ—Ä—ã–µ –∞—Å—Å–æ—Ü–∏–∏—Ä—É—é—Ç—Å—è —Å –≤–∞—à–∏–º–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏.",
        "üåü –û–±—Å—É–¥–∏—Ç–µ, –∫–∞–∫ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–µ–±—è —á–µ—Ä–µ–∑ 5 –ª–µ—Ç –≤–º–µ—Å—Ç–µ.",
        "üéØ –°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –¥–æ—Å–∫—É –º–µ—á—Ç–∞–Ω–∏–π —Å —Å–æ–≤–º–µ—Å—Ç–Ω—ã–º–∏ —Ü–µ–ª—è–º–∏.",
        "üìñ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∫–Ω–∏–≥—É –∏ –æ–±—Å—É–¥–∏—Ç–µ –µ—ë.",
        "üìù –ù–∞–ø–∏—à–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∏–∑ 10 –≤–µ—â–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è –≤ –ø–∞—Ä—Ç–Ω—ë—Ä–µ.",
        "üé• –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Ñ–∏–ª—å–º, —Å–≤—è–∑–∞–≤—à–∏—Å—å –ø–æ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫—É.",
        "üìû –£—Å—Ç—Ä–æ–π—Ç–µ –∑–≤–æ–Ω–æ–∫ –∏ –æ–±—Å—É–¥–∏—Ç–µ —Å–≤–æ–∏ –º–µ—á—Ç—ã –∏ –ø–ª–∞–Ω—ã.",
        "üé® –ù–∞—Ä–∏—Å—É–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤–º–µ—Å—Ç–µ –∏ –æ–±–º–µ–Ω—è–π—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.",
        "üçπ –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –∫–æ–∫—Ç–µ–π–ª—å –∏–ª–∏ –∫–æ—Ñ–µ –ø–æ –æ–¥–Ω–æ–º—É —Ä–µ—Ü–µ–ø—Ç—É –∏ –≤—ã–ø–µ–π—Ç–µ –≤–º–µ—Å—Ç–µ.",
        "üìö –û–±—Å—É–¥–∏—Ç–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã, –∫–Ω–∏–≥–∏ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª—ã.",
        "üí° –û–±—Å—É–¥–∏—Ç–µ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Å–≤–æ—ë–º –±—É–¥—É—â–µ–º."
    ]
    challenge = random.choice(challenges)
    await update.message.reply_text(f"üéâ –í–∞—à —á–µ–ª–ª–µ–Ω–¥–∂: {challenge}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram –±–æ—Ç–∞."""
    init_db()
    BOT_TOKEN = os.getenv("BOT_TOKEN")
    if not BOT_TOKEN:
        raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ BOT_TOKEN —É–∫–∞–∑–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("challenge", challenge_command))
    app.run_polling()

if __name__ == "__main__":
    main()
