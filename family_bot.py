from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters
import sqlite3
import random
from dotenv import load_dotenv
import os
from datetime import datetime
import logging

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –£–∫–∞–∂–∏—Ç–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
ALLOWED_USERS = [7666108269, 1278614067]

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(message)s")

# –°–ø–∏—Å–æ–∫ –∑–∞–≥–∞–¥–æ–∫
riddles = [
    {"question": "–ß—Ç–æ –º–æ–∂–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å, –Ω–æ –Ω–µ–ª—å–∑—è —Å—ä–µ—Å—Ç—å?", "answer": "—É—Ä–æ–∫–∏"},
    {"question": "–ö—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö?", "answer": "—ç—Ö–æ"},
    {"question": "–ß—Ç–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–ø—É—Å–∫–∞–µ—Ç—Å—è?", "answer": "–≤–æ–∑—Ä–∞—Å—Ç"},
    {"question": "–ß—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º–æ–∫—Ä—ã–º –≤–æ –≤—Ä–µ–º—è —Å—É—à–∫–∏?", "answer": "–ø–æ–ª–æ—Ç–µ–Ω—Ü–µ"},
    {"question": "–ß—Ç–æ –Ω–µ–ª—å–∑—è —Å—ä–µ—Å—Ç—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫?", "answer": "–æ–±–µ–¥ –∏ —É–∂–∏–Ω"},
    {"question": "–£ —á–µ–≥–æ –Ω–µ—Ç –Ω–∞—á–∞–ª–∞, –∫–æ–Ω—Ü–∞ –∏ —Å–µ—Ä–µ–¥–∏–Ω—ã?", "answer": "–∫–æ–ª—å—Ü–æ"},
    {"question": "–ß—Ç–æ –≤—Å–µ–≥–¥–∞ —Ä–∞—Å—Ç–µ—Ç, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è?", "answer": "–≤–æ–∑—Ä–∞—Å—Ç"},
    {"question": "–í–∏—Å–∏—Ç –≥—Ä—É—à–∞ ‚Äî –Ω–µ–ª—å–∑—è —Å–∫—É—à–∞—Ç—å. –ß—Ç–æ —ç—Ç–æ?", "answer": "–ª–∞–º–ø–æ—á–∫–∞"},
    {"question": "–ö–∞–∫–∞—è –ø—Ç–∏—Ü–∞ —Å–∞–º–∞—è —É–º–Ω–∞—è?", "answer": "—Å–æ–≤–∞"}
]

# –°–ø–∏—Å–æ–∫ —á–µ–ª–ª–µ–Ω–¥–∂–µ–π
challenges = [
    "üíå –ù–∞–ø–∏—à–∏—Ç–µ –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –¥—Ä—É–≥—É –∏–ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—É.",
    "üéµ –°–æ—Å—Ç–∞–≤—å—Ç–µ –ø–ª–µ–π–ª–∏—Å—Ç –≤–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö –ø–µ—Å–µ–Ω.",
    "üì∏ –ù–∞–π–¥–∏—Ç–µ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –ª—é–±–∏–º—ã–º —Å–Ω–∏–º–∫–æ–º.",
    "üéØ –ü–æ—Å—Ç–∞–≤—å—Ç–µ —Ü–µ–ª—å –Ω–∞ –Ω–µ–¥–µ–ª—é –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.",
    "üí° –ò–∑—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∞–≤—ã–∫ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç.",
    "üç¥ –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –Ω–æ–≤–æ–µ –±–ª—é–¥–æ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏.",
    "üìñ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≥–ª–∞–≤—É –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏ –∏ –æ–±—Å—É–¥–∏—Ç–µ —Å –∫–µ–º-—Ç–æ.",
    "üé• –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –¥–∞–≤–Ω–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª–∏.",
    "üì∏ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –ª—é–±–∏–º–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –∏–∑ –≤–∞—à–µ–≥–æ –æ–±—â–µ–≥–æ –ø—Ä–æ—à–ª–æ–≥–æ.",
    "üéÅ –°–¥–µ–ª–∞–π—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–π —Å—é—Ä–ø—Ä–∏–∑: –∑–∞–∫–∞–∂–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É –µ–¥—ã –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞.",
    "üç¥ –£—Å—Ç—Ä–æ–π—Ç–µ –æ–Ω–ª–∞–π–Ω-—É–∂–∏–Ω, –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–≤ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ä–µ—Ü–µ–ø—Ç.",
    "üéµ –°–æ–∑–¥–∞–π—Ç–µ –ø–ª–µ–π–ª–∏—Å—Ç –∏–∑ –ø–µ—Å–µ–Ω, –∫–æ—Ç–æ—Ä—ã–µ –∞—Å—Å–æ—Ü–∏–∏—Ä—É—é—Ç—Å—è —Å –≤–∞—à–∏–º–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏.",
    "üåü –û–±—Å—É–¥–∏—Ç–µ, –∫–∞–∫ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–µ–±—è —á–µ—Ä–µ–∑ 5 –ª–µ—Ç –≤–º–µ—Å—Ç–µ.",
    "üéØ –°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –¥–æ—Å–∫—É –º–µ—á—Ç–∞–Ω–∏–π —Å —Å–æ–≤–º–µ—Å—Ç–Ω—ã–º–∏ —Ü–µ–ª—è–º–∏.",
    "üìñ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∫–Ω–∏–≥—É –∏ –æ–±—Å—É–¥–∏—Ç–µ –µ—ë.",
    "üìù –ù–∞–ø–∏—à–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∏–∑ 10 –≤–µ—â–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è –≤ –ø–∞—Ä—Ç–Ω—ë—Ä–µ.",
    "üé• –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Ñ–∏–ª—å–º, —Å–≤—è–∑–∞–≤—à–∏—Å—å –ø–æ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫—É.",
    "üìû –£—Å—Ç—Ä–æ–π—Ç–µ –∑–≤–æ–Ω–æ–∫ –∏ –æ–±—Å—É–¥–∏—Ç–µ —Å–≤–æ–∏ –º–µ—á—Ç—ã –∏ –ø–ª–∞–Ω—ã.",
    "üé® –ù–∞—Ä–∏—Å—É–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤–º–µ—Å—Ç–µ –∏ –æ–±–º–µ–Ω—è–π—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.",
    "üçπ –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –∫–æ–∫—Ç–µ–π–ª—å –∏–ª–∏ –∫–æ—Ñ–µ –ø–æ –æ–¥–Ω–æ–º—É —Ä–µ—Ü–µ–ø—Ç—É –∏ –≤—ã–ø–µ–π—Ç–µ –≤–º–µ—Å—Ç–µ.",
    "üìö –û–±—Å—É–¥–∏—Ç–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã, –∫–Ω–∏–≥–∏ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª—ã.",
    "üí° –û–±—Å—É–¥–∏—Ç–µ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Å–≤–æ—ë–º –±—É–¥—É—â–µ–º."
]

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ç–µ–∫—É—â–∏—Ö –∑–∞–≥–∞–¥–æ–∫
current_riddles = {}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def is_allowed(user_id):
    return user_id in ALLOWED_USERS

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_db():
    conn = sqlite3.connect("family_bot.db")
    cursor = conn.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS gratitude (id INTEGER PRIMARY KEY, user TEXT, message TEXT, timestamp TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS dates (id INTEGER PRIMARY KEY, date TEXT, description TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS list_items (id INTEGER PRIMARY KEY, item TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS goals (id INTEGER PRIMARY KEY, goal TEXT)")
    cursor.execute("CREATE TABLE IF NOT EXISTS chat (id INTEGER PRIMARY KEY, user TEXT, message TEXT, timestamp TEXT)")
    conn.commit()
    conn.close()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not is_allowed(user_id):
        await update.message.reply_text("‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.")
        return

    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≤–∞—à —Å–µ–º–µ–π–Ω—ã–π –±–æ—Ç. –í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "‚ú® /gratitude - –î–æ–±–∞–≤–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å\n"
        "üìñ /viewgratitudes - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏\n"
        "üõí /additem - –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫\n"
        "üõçÔ∏è /viewitems - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫\n"
        "‚ùå /removeitem - –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫\n"
        "üéØ /addgoal - –î–æ–±–∞–≤–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—É—é —Ü–µ–ª—å\n"
        "üèÜ /goals - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π\n"
        "üìÖ /setdate - –î–æ–±–∞–≤–∏—Ç—å –ø–∞–º—è—Ç–Ω—É—é –¥–∞—Ç—É\n"
        "üóìÔ∏è /dates - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–∞–º—è—Ç–Ω—ã–µ –¥–∞—Ç—ã\n"
        "üß© /riddle - –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–∞–¥–∫—É\n"
        "üéâ /challenge - –ü–æ–ª—É—á–∏—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂\n"
        "üí¨ /chat - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–±—â–∏–π —á–∞—Ç\n"
        "üìñ /viewchat - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—â–∏–π —á–∞—Ç\n"
    )

# –û–±—â–∏–π —á–∞—Ç
async def chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user.first_name
    message = ' '.join(context.args)
    if not message:
        await update.message.reply_text("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
        return

    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    conn = sqlite3.connect("family_bot.db")
    cursor = conn.cursor()
    cursor.execute("INSERT INTO chat (user, message, timestamp) VALUES (?, ?, ?)", (user, message, timestamp))
    conn.commit()
    conn.close()

    await update.message.reply_text("üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ–±—â–∏–π —á–∞—Ç!")

# –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–±—â–µ–≥–æ —á–∞—Ç–∞
async def viewchat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    conn = sqlite3.connect("family_bot.db")
    cursor = conn.cursor()
    cursor.execute("SELECT user, message, timestamp FROM chat")
    messages = cursor.fetchall()
    conn.close()

    if messages:
        chat_texts = [f"üìÖ {msg[2]} - {msg[0]}: {msg[1]}" for msg in messages]
        await update.message.reply_text("\n".join(chat_texts))
    else:
        await update.message.reply_text("üí¨ –û–±—â–∏–π —á–∞—Ç –ø–æ–∫–∞ –ø—É—Å—Ç.")

# –ö–æ–º–∞–Ω–¥–∞ /riddle
async def riddle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    riddle = random.choice(riddles)
    current_riddles[user_id] = riddle
    await update.message.reply_text(f"üß© –ó–∞–≥–∞–¥–∫–∞: {riddle['question']}\n–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç!")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–≥–∞–¥–∫—É
async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in current_riddles:
        riddle = current_riddles[user_id]
        user_answer = update.message.text.strip().lower()
        if user_answer == riddle['answer']:
            await update.message.reply_text("üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            del current_riddles[user_id]
        else:
            await update.message.reply_text("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
    else:
        await update.message.reply_text("‚ùì –£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –∑–∞–≥–∞–¥–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /riddle, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é.")

# –ö–æ–º–∞–Ω–¥–∞ /challenge
async def challenge(update: Update, context: ContextTypes.DEFAULT_TYPE):
    challenge = random.choice(challenges)
    await update.message.reply_text(f"üéâ –í–∞—à —á–µ–ª–ª–µ–Ω–¥–∂: {challenge}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    init_db()
    BOT_TOKEN = os.getenv("BOT_TOKEN")
    if not BOT_TOKEN:
        raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    app = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("chat", chat))
    app.add_handler(CommandHandler("viewchat", viewchat))
    app.add_handler(CommandHandler("riddle", riddle))
    app.add_handler(CommandHandler("challenge", challenge))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer))

    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    main()
